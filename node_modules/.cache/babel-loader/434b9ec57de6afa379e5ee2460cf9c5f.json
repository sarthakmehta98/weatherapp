{"ast":null,"code":"var _jsxFileName = \"/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport sample from './Lightning.mp4';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: 'hello'\n    };\n  }\n\n  render() {\n    return React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"video\",\n      width: \"770\",\n      height: \"882\",\n      onclick: \"play();\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"video/Motion.mp4\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Content above your video\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Content Below Your Video\"), React.createElement(\"label\", {\n      for: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Form Input Label\"), React.createElement(\"input\", {\n      id: \"input\",\n      name: \"input\",\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nReactDOM.render(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","sample","Index","Component","constructor","props","state","weather","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAGA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EACb;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAID;;AACCC,EAAAA,MAAM,GACN;AACI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAA8B,MAAA,MAAM,EAAC,KAArC;AAA2C,MAAA,OAAO,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAE,kBAAb;AAAiC,MAAA,IAAI,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR,EAIQ;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAA+B,MAAA,KAAK,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CAFJ,CAJR,CADJ,CADJ;AAkBH;;AA7BL;;AAmCAV,QAAQ,CAACU,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,E,CAEA;AACA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport sample from './Lightning.mp4'\n\n\nclass Index extends React.Component\n{\n    constructor(props)\n  {\n    super(props)\n    this.state = {\n      weather: 'hello'\n    }\n\n  }\n    render()\n    {\n        return(\n            <body>\n                <div class=\"container\">\n                        <video id=\"video\" width=\"770\" height=\"882\" onclick=\"play();\">\n                            <source src={\"video/Motion.mp4\"} type=\"video/mp4\" />\n                        </video>\n                        <div class=\"overlay\">\n                            <p>Content above your video</p>\n                            <form>\n                                <p>Content Below Your Video</p>\n                                <label for=\"input\">Form Input Label</label>\n                                <input id=\"input\" name=\"input\" value=\"\" />\n                                <button type=\"submit\">Submit</button>\n                            </form>\n                        </div>\n                    </div>\n            </body>\n        );\n    }\n}\n\n\n\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}