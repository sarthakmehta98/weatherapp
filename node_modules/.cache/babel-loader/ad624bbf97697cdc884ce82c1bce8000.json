{"ast":null,"code":"var _jsxFileName = \"/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Lightning from './Lightning.mp4';\nimport cloudy from './clouds.mp4';\nimport rain from './rainy.mp4';\nimport snowy from './snowy.mp4';\nimport windy from './windy.mp4';\nimport haze from './haze.mp4';\nconst API_KEY = \"94dbaa5cedc23401e9c6d96681166f49\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: snowy,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      temperature: undefined\n    };\n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n  handleCityChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  render() {\n    const getWeather = async e => {\n      e.preventDefault();\n      const city = this.state.city;\n      const country = this.state.country;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json(); //console.log(data);\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"video\",\n      autoPlay: \"true\",\n      loop: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.state.weather,\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"aboveSubmit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Enter city name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleCityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Enter country name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.country,\n      onChange: this.handleCountryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.city && this.state.country && React.createElement(\"p\", {\n      className: \"weather__key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" Location:\", React.createElement(\"span\", {\n      className: \"weather__value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" \", this.state.city, \", \", this.state.country)), this.state.temperature && React.createElement(\"p\", {\n      className: \"weather__key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Temperature:\", React.createElement(\"span\", {\n      className: \"weather__value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" \", this.state.temperature, \" \")), this.state.humidity && React.createElement(\"p\", {\n      className: \"weather__key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Humidity:\", React.createElement(\"span\", {\n      className: \"weather__value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" \", this.state.humidity, \" \")), this.state.description && React.createElement(\"p\", {\n      className: \"weather__key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Conditions:\", React.createElement(\"span\", {\n      className: \"weather__value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" \", this.state.description, \" \")), this.state.error && React.createElement(\"p\", {\n      className: \"weather__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.error))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/App.js"],"names":["React","Lightning","cloudy","rain","snowy","windy","haze","API_KEY","App","Component","constructor","props","state","weather","city","undefined","country","humidity","description","error","temperature","handleCityChange","bind","handleCountryChange","event","setState","target","value","render","getWeather","e","preventDefault","api_call","fetch","data","json","main","temp","name","sys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CACA;AACEC,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAET,KADE;AAEXU,MAAAA,IAAI,EAAEC,SAFK;AAGXC,MAAAA,OAAO,EAAED,SAHE;AAIXE,MAAAA,QAAQ,EAAEF,SAJC;AAKXG,MAAAA,WAAW,EAAEH,SALF;AAMXI,MAAAA,KAAK,EAAEJ,SANI;AAOXK,MAAAA,WAAW,EAAEL;AAPF,KAAb;AAUA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AAGD;;AAGDD,EAAAA,gBAAgB,CAACG,KAAD,EAChB;AACE,SAAKC,QAAL,CAAc;AAACX,MAAAA,IAAI,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAApB,KAAd;AAED;;AAEDJ,EAAAA,mBAAmB,CAACC,KAAD,EACnB;AACE,SAAKC,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAd;AACD;;AAKDC,EAAAA,MAAM,GACN;AACC,UAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMjB,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACA,YAAME,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAA3B;AACA,YAAMgB,QAAQ,GAAG,MAAMC,KAAK,4DAAqDnB,IAArD,cAA6DE,OAA7D,oBAA8ET,OAA9E,mBAA5B;AACA,YAAM2B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAL6B,CAM7B;;AAGA,UAAIrB,IAAI,IAAIE,OAAZ,EAAqB;AACnB,aAAKS,QAAL,CAAc;AACZL,UAAAA,WAAW,EAAEc,IAAI,CAACE,IAAL,CAAUC,IADX;AAEZvB,UAAAA,IAAI,EAAEoB,IAAI,CAACI,IAFC;AAGZtB,UAAAA,OAAO,EAAEkB,IAAI,CAACK,GAAL,CAASvB,OAHN;AAIZC,UAAAA,QAAQ,EAAEiB,IAAI,CAACE,IAAL,CAAUnB,QAJR;AAKZC,UAAAA,WAAW,EAAEgB,IAAI,CAACrB,OAAL,CAAa,CAAb,EAAgBK,WALjB;AAMZC,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD,OATD,MASO;AAEL,aAAKM,QAAL,CAAc;AACZL,UAAAA,WAAW,EAAEL,SADD;AAEZD,UAAAA,IAAI,EAAEC,SAFM;AAGZC,UAAAA,OAAO,EAAED,SAHG;AAIZE,UAAAA,QAAQ,EAAEF,SAJE;AAKZG,UAAAA,WAAW,EAAEH,SALD;AAMZI,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD;AAIF,KAhCF;;AAkCC,WAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,QAAQ,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAQ,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWC,OAAxB;AAAiC,MAAA,IAAI,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFA,EAQA;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKO,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHA,EAIA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWI,OAArC;AAA8C,MAAA,QAAQ,EAAE,KAAKO,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ,EAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKM,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CAFJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAER,KAAKjB,KAAL,CAAWE,IAAX,IAAmB,KAAKF,KAAL,CAAWI,OAA9B,IAAyC;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACvC;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoC,KAAKJ,KAAL,CAAWE,IAA/C,QAAyD,KAAKF,KAAL,CAAWI,OAApE,CADuC,CAFjC,EAOR,KAAKJ,KAAL,CAAWQ,WAAX,IAA0B;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACxB;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoC,KAAKR,KAAL,CAAWQ,WAA/C,MADwB,CAPlB,EAYR,KAAKR,KAAL,CAAWK,QAAX,IAAuB;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACrB;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoC,KAAKL,KAAL,CAAWK,QAA/C,MADqB,CAZf,EAiBR,KAAKL,KAAL,CAAWM,WAAX,IAA0B;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACxB;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoC,KAAKN,KAAL,CAAWM,WAA/C,MADwB,CAjBlB,EAsBR,KAAKN,KAAL,CAAWO,KAAX,IAAoB;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKP,KAAL,CAAWO,KAA3C,CAtBZ,CAdJ,CARA,CAFF;AAyDD;;AAhIH;;AAmIA,eAAeX,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Lightning from './Lightning.mp4'\nimport cloudy from './clouds.mp4'\nimport rain from './rainy.mp4'\nimport snowy from './snowy.mp4'\nimport windy from './windy.mp4'\nimport haze from './haze.mp4'\n\nconst API_KEY = \"94dbaa5cedc23401e9c6d96681166f49\";\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      weather: snowy,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      temperature: undefined\n    }\n    \n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n\n\n  }\n \n  \n  handleCityChange(event)\n  {\n    this.setState({city: event.target.value})\n\n  }\n\n  handleCountryChange(event)\n  {\n    this.setState({country: event.target.value})\n  }\n\n\n\n\n  render()\n  {\n   const getWeather = async (e) => {\n      e.preventDefault(); \n      const city = this.state.city;\n      const country = this.state.country;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n      //console.log(data);\n  \n      \n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n  \n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n  \n   \n  \n    }\n    \n    return (\n\n      <div className=\"container\" >\n\n      <video id=\"video\" autoPlay=\"true\" loop=\"true\">\n  \n          <source src={this.state.weather} type=\"video/mp4\" />\n  \n      </video>\n  \n      <div class=\"overlay\">\n  \n          <form>\n              <div className=\"aboveSubmit\">\n              <span>Enter city name</span>\n              <input type=\"text\" value={this.state.city} onChange={this.handleCityChange}></input>\n              <span>Enter country name</span>\n              <input type=\"text\" value={this.state.country} onChange={this.handleCountryChange}></input>\n              </div>\n              <button type=\"submit\" onClick={this.getWeather}>Submit</button>\n              \n          </form>\n\n\n          <div>\n{\t\n  this.state.city && this.state.country && <p className=\"weather__key\"> Location: \n    <span className=\"weather__value\"> { this.state.city }, { this.state.country }</span>\n  </p> \n}\n{ \t\n  this.state.temperature && <p className=\"weather__key\"> Temperature: \n    <span className=\"weather__value\"> { this.state.temperature }\t</span>\n  </p> \n}\n{ \t\n  this.state.humidity && <p className=\"weather__key\"> Humidity: \n    <span className=\"weather__value\"> { this.state.humidity } </span>\n  </p> \n}\n{ \t\n  this.state.description && <p className=\"weather__key\"> Conditions: \n    <span className=\"weather__value\"> { this.state.description } </span>\n</p> \n}\n{ \n  this.state.error && <p className=\"weather__error\">{ this.state.error }</p>  \n}\n\n          </div>\n  \n      </div>\n  \n      </div>\n  \n  \n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}