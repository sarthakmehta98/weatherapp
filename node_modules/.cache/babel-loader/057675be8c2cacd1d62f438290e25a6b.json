{"ast":null,"code":"var _jsxFileName = \"/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Lightning from './Lightning.mp4';\nimport cloudy from './clouds.mp4';\nimport rain from './rainy.mp4';\nimport snowy from './snowy.mp4';\nimport windy from './windy.mp4';\nconst API_KEY = \"94dbaa5cedc23401e9c6d96681166f49\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = this.state.city;\n      const country = this.state.country;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json(); //console.log(data);\n\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country\n      });\n    };\n\n    this.state = {\n      weather: snowy,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      temperature: undefined\n    };\n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n  handleCityChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"video\",\n      autoPlay: \"true\",\n      loop: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.state.weather,\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"aboveSubmit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Enter city name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleCityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Enter country name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.country,\n      onChange: this.handleCountryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/App.js"],"names":["React","Lightning","cloudy","rain","snowy","windy","API_KEY","App","Component","constructor","props","getWeather","e","preventDefault","city","state","country","api_call","fetch","data","json","setState","temperature","main","temp","name","sys","weather","undefined","humidity","description","error","handleCityChange","bind","handleCountryChange","event","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CACA;AACEC,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAiBAC,UAjBA,GAiBa,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,YAAME,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDJ,IAArD,cAA6DE,OAA7D,oBAA8EV,OAA9E,mBAA5B;AACA,YAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CALwB,CAMxB;;AAEA,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEH,IAAI,CAACI,IAAL,CAAUC,IADX;AAEZV,QAAAA,IAAI,EAAEK,IAAI,CAACM,IAFC;AAGZT,QAAAA,OAAO,EAAEG,IAAI,CAACO,GAAL,CAASV;AAHN,OAAd;AAMD,KA/BD;;AAEE,SAAKD,KAAL,GAAa;AACXY,MAAAA,OAAO,EAAEvB,KADE;AAEXU,MAAAA,IAAI,EAAEc,SAFK;AAGXZ,MAAAA,OAAO,EAAEY,SAHE;AAIXC,MAAAA,QAAQ,EAAED,SAJC;AAKXE,MAAAA,WAAW,EAAEF,SALF;AAMXG,MAAAA,KAAK,EAAEH,SANI;AAOXN,MAAAA,WAAW,EAAEM;AAPF,KAAb;AAUA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AAGD;;AAiBDD,EAAAA,gBAAgB,CAACG,KAAD,EAChB;AACE,SAAKd,QAAL,CAAc;AAACP,MAAAA,IAAI,EAAEqB,KAAK,CAACC,MAAN,CAAaC;AAApB,KAAd;AAED;;AAEDH,EAAAA,mBAAmB,CAACC,KAAD,EACnB;AACE,SAAKd,QAAL,CAAc;AAACL,MAAAA,OAAO,EAAEmB,KAAK,CAACC,MAAN,CAAaC;AAAvB,KAAd;AACD;;AAKDC,EAAAA,MAAM,GACN;AACE,WAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,QAAQ,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAQ,MAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWY,OAAxB;AAAiC,MAAA,IAAI,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFA,EAQA;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWD,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKkB,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHA,EAIA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OAArC;AAA8C,MAAA,QAAQ,EAAE,KAAKkB,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ,EAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKvB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CAFJ,CARA,CAFF;AA6BD;;AAhFH;;AAmFA,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Lightning from './Lightning.mp4'\nimport cloudy from './clouds.mp4'\nimport rain from './rainy.mp4'\nimport snowy from './snowy.mp4'\nimport windy from './windy.mp4'\n\n\nconst API_KEY = \"94dbaa5cedc23401e9c6d96681166f49\";\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      weather: snowy,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      temperature: undefined\n    }\n    \n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n\n\n  }\n  getWeather = async (e) => {\n    e.preventDefault(); \n    const city = this.state.city;\n    const country = this.state.country;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    //console.log(data);\n\n    this.setState({\n      temperature: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      \n    })\n  }\n  \n  handleCityChange(event)\n  {\n    this.setState({city: event.target.value})\n\n  }\n\n  handleCountryChange(event)\n  {\n    this.setState({country: event.target.value})\n  }\n\n\n\n\n  render()\n  {\n    return (\n\n      <div className=\"container\" >\n\n      <video id=\"video\" autoPlay=\"true\" loop=\"true\">\n  \n          <source src={this.state.weather} type=\"video/mp4\" />\n  \n      </video>\n  \n      <div class=\"overlay\">\n  \n          <form>\n              <div className=\"aboveSubmit\">\n              <span>Enter city name</span>\n              <input type=\"text\" value={this.state.city} onChange={this.handleCityChange}></input>\n              <span>Enter country name</span>\n              <input type=\"text\" value={this.state.country} onChange={this.handleCountryChange}></input>\n              </div>\n              <button type=\"submit\" onClick={this.getWeather}>Submit</button>\n              \n          </form>\n  \n      </div>\n  \n      </div>\n  \n  \n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}