{"ast":null,"code":"var _jsxFileName = \"/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Lightning from './Lightning.mp4';\nimport cloudy from './clouds.mp4';\nimport rain from './rainy.mp4';\nimport snowy from './snowy.mp4';\nimport windy from './windy.mp4';\nconst API_KEY = \"94dbaa5cedc23401e9c6d96681166f49\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = this.state.city;\n      const country = this.state.country;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json(); //console.log(data);\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n\n      handleCityChange(event);\n      {\n        this.setState({\n          city: event.target.value\n        });\n      }\n      handleCountryChange(event);\n      {\n        this.setState({\n          country: event.target.value\n        });\n      }\n      render();\n      {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"video\", {\n          id: \"video\",\n          autoPlay: \"true\",\n          loop: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: this.state.weather,\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"aboveSubmit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Enter city name\"), React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.city,\n          onChange: this.handleCityChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Enter country name\"), React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.country,\n          onChange: this.handleCountryChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          type: \"submit\",\n          onClick: this.getWeather,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Submit\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, this.state.city && this.state.country && React.createElement(\"p\", {\n          className: \"weather__key\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \" Location:\", React.createElement(\"span\", {\n          className: \"weather__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \" \", this.state.city, \", \", this.state.country)), this.state.temperature && React.createElement(\"p\", {\n          className: \"weather__key\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \" Temperature:\", React.createElement(\"span\", {\n          className: \"weather__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \" \", this.state.temperature, \" \")), this.state.humidity && React.createElement(\"p\", {\n          className: \"weather__key\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \" Humidity:\", React.createElement(\"span\", {\n          className: \"weather__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \" \", this.state.humidity, \" \")), this.state.description && React.createElement(\"p\", {\n          className: \"weather__key\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \" Conditions:\", React.createElement(\"span\", {\n          className: \"weather__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \" \", this.state.description, \" \")), this.state.error && React.createElement(\"p\", {\n          className: \"weather__error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, this.state.error))));\n      }\n    };\n\n    this.state = {\n      weather: snowy,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      temperature: undefined\n    };\n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/HOTIE/Desktop/INTERNSHIP/Pratik/ReactPrograms/videobackground/src/App.js"],"names":["React","Lightning","cloudy","rain","snowy","windy","API_KEY","App","Component","constructor","props","getWeather","e","preventDefault","city","state","country","api_call","fetch","data","json","setState","temperature","main","temp","name","sys","humidity","description","weather","undefined","error","handleCityChange","event","target","value","handleCountryChange","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Lightning from './Lightning.mp4'\nimport cloudy from './clouds.mp4'\nimport rain from './rainy.mp4'\nimport snowy from './snowy.mp4'\nimport windy from './windy.mp4'\n\n\nconst API_KEY = \"94dbaa5cedc23401e9c6d96681166f49\";\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      weather: snowy,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      temperature: undefined\n    }\n    \n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n\n\n  }\n  getWeather = async (e) => {\n    e.preventDefault(); \n    const city = this.state.city;\n    const country = this.state.country;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    //console.log(data);\n\n    if (city && country){\n    \n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description\n        })\n      }\n\n    else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the values.\"\n      });\n    }\n  \n  handleCityChange(event)\n  {\n    this.setState({city: event.target.value})\n\n  }\n\n  handleCountryChange(event)\n  {\n    this.setState({country: event.target.value})\n  }\n\n\n\n\n  render()\n  {\n    return (\n\n      <div className=\"container\" >\n\n      <video id=\"video\" autoPlay=\"true\" loop=\"true\">\n  \n          <source src={this.state.weather} type=\"video/mp4\" />\n  \n      </video>\n  \n      <div class=\"overlay\">\n  \n          <form>\n              <div className=\"aboveSubmit\">\n              <span>Enter city name</span>\n              <input type=\"text\" value={this.state.city} onChange={this.handleCityChange}></input>\n              <span>Enter country name</span>\n              <input type=\"text\" value={this.state.country} onChange={this.handleCountryChange}></input>\n              </div>\n              <button type=\"submit\" onClick={this.getWeather}>Submit</button>\n              \n          </form>\n\n\n          <div>\n{\t\n  this.state.city && this.state.country && <p className=\"weather__key\"> Location: \n    <span className=\"weather__value\"> { this.state.city }, { this.state.country }</span>\n  </p> \n}\n{ \t\n  this.state.temperature && <p className=\"weather__key\"> Temperature: \n    <span className=\"weather__value\"> { this.state.temperature }\t</span>\n  </p> \n}\n{ \t\n  this.state.humidity && <p className=\"weather__key\"> Humidity: \n    <span className=\"weather__value\"> { this.state.humidity } </span>\n  </p> \n}\n{ \t\n  this.state.description && <p className=\"weather__key\"> Conditions: \n    <span className=\"weather__value\"> { this.state.description } </span>\n</p> \n}\n{ \n  this.state.error && <p className=\"weather__error\">{ this.state.error }</p>  \n}\n\n          </div>\n  \n      </div>\n  \n      </div>\n  \n  \n    )\n  }\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}